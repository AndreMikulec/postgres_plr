

version: 0.1.0-{build}-{branch}

# Do not build on tags (GitHub and BitBucket)
skip_tags: true

# Start builds on tags only (GitHub and BitBucket)
# skip_non_tags: true

branches:
  only:
    - master

skip_commits:
  files:
    - readme.*

# Build worker image (VM template)
image: Visual Studio 2019

# set clone depth
clone_depth: 1

environment:
  PGSOURCE:  $(APPVEYOR_BUILD_FOLDER)\postgres
  PLRSOURCE:  $(APPVEYOR_BUILD_FOLDER)\plr
  PLRMAKEFILESOURCE: $(APPVEYOR_BUILD_FOLDER)\PLRMAKEFILESOURCE\plr
  PGBUILD: $(APPVEYOR_BUILD_FOLDER)\PGBUILD
  PGINSTALL: $(APPVEYOR_BUILD_FOLDER)\PGINSTALL
  R_HOME: $(APPVEYOR_BUILD_FOLDER)\RINSTALL
  ZIPTMP: $(APPVEYOR_BUILD_FOLDER)\ZIPTMP
  matrix:
    - MSYSTEM: MINGW64
      PG_GIT_BRANCH: REL_13_STABLE
      PLR_TAG: REL8_4_1
      R_ARCH: /x64
      COMPONENTS_ARCH: ',x64'
      R_OLD_VERSION: 3.6.3
      R_CUR_VERSION: 4.0.3

# Accessing Windows build worker via Remote Desktop
# JAN 2021
# https://www.appveyor.com/docs/how-to/rdp-to-build-worker/

# collect IP and username for a Microsoft Remote Desktop Connection (rdc)
init:
  # - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

  # PATH: I am adding to the PATH, to make "pacman" available during the Appveyor "install" stage.
  # SEE mypaint
  # https://github.com/mypaint/mypaint/blob/4141a6414b77dcf3e3e62961f99b91d466c6fb52/.appveyor.yml
  #
  - PATH C:\msys64\%MSYSTEM%\bin;C:\msys64\usr\bin;C:\msys64\bin;%PATH%

install:

  - echo BEGIN APPVEYOR INSTALL

  - echo on
  - set
  #
  # MSYS2_PATH_TYPE=inherit
  # MSYSTEM=MINGW64
  # xor
  # MSYSTEM=MINGW32
  #
  - sh -l -c "export"
  #
  # export MINGW_CHOST="x86_64-w64-mingw32"
  # export MINGW_PACKAGE_PREFIX="mingw-w64-x86_64"
  # export MINGW_PREFIX="/mingw64"
  # export MSYS2_PATH_TYPE="inherit"
  # export MSYSTEM="MINGW64"
  # export MSYSTEM_CARCH="x86_64"
  # export MSYSTEM_CHOST="x86_64-w64-mingw32"
  # export MSYSTEM_PREFIX="/mingw64"
  #
  # export MINGW_CHOST="i686-w64-mingw32"
  # export MINGW_PACKAGE_PREFIX="mingw-w64-i686"
  # export MINGW_PREFIX="/mingw32"
  # export MSYS2_PATH_TYPE="inherit"
  # export MSYSTEM="MINGW32"
  # export MSYSTEM_CARCH="i686"
  # export MSYSTEM_CHOST="i686-w64-mingw32"
  # export MSYSTEM_PREFIX="/mingw32"
  #
  - echo %CD%
  - echo %APPVEYOR_BUILD_FOLDER%

  - git clone --depth 1 --single-branch --branch=%PG_GIT_BRANCH% https://github.com/postgres/postgres.git %PGSOURCE%
  - git clone --depth 1 --single-branch --branch=%PLR_TAG%       https://github.com/postgres-plr/plr.git  %PLRSOURCE%
  - git clone --depth 1 --single-branch --branch=master          https://github.com/AndreMikulec/postgresql_ext_plr_Makefile.git %PLRMAKEFILESOURCE%

  # From
  # https://github.com/postgres-plr/plpostgres-plr/plr/appveyor.yml
  #
  - appveyor downloadfile https://cran.r-project.org/bin/windows/base/old/%R_OLD_VERSION%/R-%R_OLD_VERSION%-win.exe
  - appveyor downloadfile https://cran.r-project.org/bin/windows/base/old/%R_CUR_VERSION%/R-%R_CUR_VERSION%-win.exe

  # MSYS2 updates
  # SEE mypaint
  # https://github.com/mypaint/mypaint/blob/4141a6414b77dcf3e3e62961f99b91d466c6fb52/.appveyor.yml
  #
  - echo BEGIN MSYS2 UPGRADE
  - pacman --noconfirm -Syuu
  - pacman --noconfirm -Suu
  - echo END   MSYS2 UPGRADE

  # Andre Mikulec experiments and
  # https://github.com/postgres-plr/plpostgres-plr/plr/appveyor.yml
  #
  # NOTE, this is an attempt to do a single architecture install.
  # HOWEVER, NOW, this is always an "R subarchitecture" install.  When did that change?
  #
  # Note: Rscript --vanilla --quiet -e shell('set') | findstr /R "^R_ARCH"
  # R_ARCH=/x64
  # R_ARCH=/i386
  #
  # place OLD R on disk
  #
  - R-%R_OLD_VERSION%-win.exe /SP- /VERYSILENT /DIR=%R_HOME%OLD /COMPONENTS=main%COMPONENTS_ARCH%,translations /NOICONS /TASKS=
  #
  # place CUR R on disk
  #
  - R-%R_CUR_VERSION%-win.exe /SP- /VERYSILENT /DIR=%R_HOME%CUR /COMPONENTS=main%COMPONENTS_ARCH%,translations /NOICONS /TASKS=

  - echo END   APPVEYOR INSTALL
  
build_script:
  - bash --login -c "$(cygpath ${APPVEYOR_BUILD_FOLDER})/full-build.sh"
  
artifacts:
  - path: "%MSYSTEM%_PG_%PG_GIT_BRANCH%_R_%R_OLD_VERSION%_PLR_%PLR_TAG%.zip"
    name: "%MSYSTEM%_PG_%PG_GIT_BRANCH%_R_%R_OLD_VERSION%_PLR_%PLR_TAG%.zip"
  - path: "%MSYSTEM%_PG_%PG_GIT_BRANCH%_R_%R_CUR_VERSION%_PLR_%PLR_TAG%.zip"
    name: "%MSYSTEM%_PG_%PG_GIT_BRANCH%_R_%R_CUR_VERSION%_PLR_%PLR_TAG%.zip"

deploy:
  release: "%MSYSTEM%_PG_%PG_GIT_BRANCH%_R_%R_CUR_VERSION%_AND_R_%R_OLD_VERSION%_PLR_%PLR_TAG%"
  provider: GitHub
  auth_token:
    secure: KzS1DumC2yBg2LGN9x3AemHFOjAdp+rD58rW5aGGpwW4Pfdwdm7AmRpYKprPY8Gs
  draft: false
  prerelease: false
  on:
    branch: master

# on_finish:
#   - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
# # remove locking file from the desktop
